import random
import threading
import string
import time
import sys
from colorama.ansi import Fore
import numpy as np
import requests
import os
import itertools
import subprocess


num = random.randint(10, 1000)
num2 = random.randint(100, 500)


def printSlow(text):
    for char in text:
        print(char, end="")
        sys.stdout.flush()
        time.sleep(.00001)

    
file = "codes.txt"
num = random.randint(10, 1000)
num2 = random.randint(100, 500)
time.sleep(1)
os.system("CLS")
os.system(f"title Connected as [User{num}]")
os.system("CLS")

animation_finished = False
animation_finished2 = False
animation_finished3 = False


def animation():
 for x in itertools.cycle(['|', '/', '-', '\\']):
    if animation_finished:
            break
    sys.stdout.write(f'\r{Fore.BLUE}[RevX] {Fore.GREEN}Checking RevX For Updates {Fore.RESET}' + x)
    sys.stdout.flush()
    time.sleep(0.1)

def animation2():
 for x in itertools.cycle(['|', '/', '-', '\\']):
    if animation_finished2:
            break
    sys.stdout.write(f'\r{Fore.BLUE}[RevX] {Fore.GREEN}Connecting to Discord Socket {Fore.RESET}' + x)
    sys.stdout.flush()
    time.sleep(0.1)

def animation3():
 for x in itertools.cycle(['|', '/', '-', '\\']):
    if animation_finished3:
            break
    sys.stdout.write(f'\r{Fore.BLUE}[RevX] {Fore.GREEN}Scraping currently {num2} Proxies {Fore.RESET}' + x)
    sys.stdout.flush()
    time.sleep(0.1)

t = threading.Thread(target=animation)
t.start()
time.sleep(5)
animation_finished = True

t = threading.Thread(target=animation2)
t.start()
time.sleep(5)
animation_finished2 = True

t = threading.Thread(target=animation3)
t.start()
time.sleep(5)
os.system("CLS")
print(f"{Fore.GREEN}[Connected!]")
animation_finished3 = True
time.sleep(2)

os.system("CLS")
def credits():
 os.system(f"title Connected as [User{num}]")
os.system("CLS")
time.sleep(2)

print(f"""{Fore.WHITE}

    ____           _  __
   / __ \___ _   _| |/ /
  / /_/ / _ \ | / /   / 
 / _, _/  __/ |/ /   |  
/_/ |_|\___/|___/_/|_|  
                        
         
                                                         
""")
printSlow(f"{Fore.GREEN} Connected as {Fore.YELLOW}[User{num}]")
printSlow(f"\n{Fore.GREEN} Version {Fore.YELLOW}1.0")
print(f"""{Fore.RESET}

 ╦═════════════════════════╦
 ║[1] - Generate and check ║                         
 ║[2] - Only generate      ║  
 ║[3] - Exit               ║                                               
 ╩═════════════════════════╩
""")




mode = input(f"{Fore.LIGHTBLUE_EX}\n [{Fore.GREEN}>>>{Fore.LIGHTBLUE_EX}]{Fore.RESET} Choice: ")

if (mode == "3"):
    os.system("CLS")
    printSlow(f"{Fore.GREEN}Thanks for using{Fore.BLUE} [krnlX]")
    time.sleep(3)
    exit()   

gens = int(input(np.array((f'{Fore.LIGHTBLUE_EX}\n [{Fore.GREEN}>>>{Fore.LIGHTBLUE_EX}]{Fore.RESET} Input How Many Codes to Generate and Check: '))))
threadsnumber = input(f"{Fore.LIGHTBLUE_EX}\n [{Fore.GREEN}>>>{Fore.LIGHTBLUE_EX}]{Fore.RESET} Input How Many Threads to use: ")
os.system("cls")
threadsnumber = int(threadsnumber)
codesperthread = gens/threadsnumber
codesperthread = int(codesperthread)


def onlygen():
    for i in range(codesperthread):
        code = ("".join(random.choices(string.ascii_uppercase + string.digits + string.ascii_lowercase, k=16)))
        nitrourl = "https://discord.gift/" + code
        print(np.array(f"{Fore.YELLOW} [UNCHECKED] {Fore.RESET}" + nitrourl))

def generatecodes():
    for i in range(codesperthread):
        code = ("".join(random.choices(string.ascii_uppercase + string.digits + string.ascii_lowercase, k=16)))
        url = "https://discordapp.com/api/v6/entitlements/gift-codes/" + code + "?with_application=false&with_subscription_plan=true"
        nitrourl = "https://discord.gift/" + code

        request = requests.get(url)

        if request.status_code == 200:
            print(np.array(f"{Fore.GREEN} [WORKING] {Fore.RESET}"+ nitrourl))
        else:
            print(np.array(f"{Fore.RED} [NOT WORKING] {Fore.RESET}" + nitrourl))
if (mode == "1"):
    os.system("CLS")

    webhopt = input(f"{Fore.LIGHTBLUE_EX}\n[{Fore.GREEN}>>>{Fore.LIGHTBLUE_EX}] {Fore.RESET}Do you want to use a webhook? (y/n): ")
    if webhopt == 'y':
        webhurl = input(f"{Fore.LIGHTBLUE_EX}\nEnter a webhook for valid codes to be sent to: ")   
    os.system("CLS")
    for i in range(threadsnumber):
        threading.Thread(target=generatecodes).start()

if (mode == "2"):
    os.system("CLS")
    threadnum = int(0)
    for i in range(threadsnumber):
        threading.Thread(target=onlygen).start()
